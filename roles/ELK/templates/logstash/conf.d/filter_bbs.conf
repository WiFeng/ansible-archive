filter {

  if "service-bbs" in [tags] {

    if [source] =~ "nginx" {

      # bbs nginx log
      grok {
        match => { "message" => "(?:%{IPORHOST:clientip}|-), %{HTTPDUSER:remote_user} \[%{HTTPDATE:timestamp}\] %{NUMBER:request_time:float} %{WORD:request_method} \"http://%{URIHOST:request_host}%{URIPATH:request_path}%{URIPARAM:request_param}?\" %{NOTSPACE:protocol} %{NUMBER:status:int} (?:%{NOTSPACE:content_type}|-)(; ?charset=%{NOTSPACE:content_charset})? (?:%{NUMBER:bytes:int}|-) (?:%{NUMBER:content_length:int}|-) (?:%{NUMBER:upstream_status:int}|-) (?:%{NUMBER:upstream_response_time:float}|-) %{QS:referrer} %{QS:user_agent} %{QS:x_forwarded_for} \"(?:%{INT:ssouid:int}|-|)\""}    
        #remove_field => [ "message" ]
        remove_field => [ "message", "remote_user", "protocol", "content_type", "content_charset", "content_length", "upstream_status", "upstream_response_time", "referrer", "user_agent", "x_forwarded_for", "ssouid" ]
        add_field => { "[@metadata][index]" => "logstash-bbs-nginx-access" }
        add_tag => [ "aggr-nginx" ]
        tag_on_failure => []
      }

    } else if [source] =~ "sphinx" {

      # sphinx search log
      grok {
        match => { "message" => "\[(?<timestamp>%{DAY} %{MONTH} \s?%{MONTHDAY} %{TIME} %{YEAR})\] %{NUMBER:time_1:float} %{WORD:time_1_unit} %{NUMBER:time_2:float} %{WORD:time_2_unit} \[%{NOTSPACE} %{NUMBER:results:int} %{DATA}\] \[%{WORD:index}\] %{GREEDYDATA:words}" }
        remove_field => [ "message" ]
        tag_on_failure => []
      }

      mutate { add_field => { "[@metadata][index]" => "logstash-bbs-sphinx-search" } }

    } else if [source] =~ "locallog" {

      # bbs app log
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}%{IP:clientip}%{SPACE}%{INT:uid}%{SPACE}%{URIPATHPARAM:request}%{SPACE}code:%{INT:ret:int}, message:%{GREEDYDATA:msg}"}
        remove_field => [ "message" ]
        tag_on_failure => []
      }

      mutate { add_field => { "[@metadata][index]" => "logstash-bbs-extra" } }
    }
  }
}
